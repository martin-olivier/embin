name: CI

on:
  push:
    paths:
      - src/*
      - tests/*
      - .github/workflows/*.yml
      - Cargo.toml
  pull_request:
    paths:
      - src/*
      - tests/*
      - .github/workflows/*.yml
      - Cargo.toml
  release:
    types: [published]

jobs:
  commits:
    name: commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: webiny/action-conventional-commits@v1.1.0

  linter:
    name: linter
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Clippy
        run: cargo clippy --all --all-features -- -D warnings

      - name: Format
        run: cargo fmt --all -- --check

  build:
    name: ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    needs: linter
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - runs-on: ubuntu-latest
            os: linux
          - runs-on: macos-latest
            os: macos
          - runs-on: windows-latest
            os: windows
            suffix: .exe

    steps:
      - uses: actions/checkout@v3

      - name: Build and install binary
        run: cargo install --path .

      - name: Run tests
        if: runner.os != 'Windows'
        working-directory: tests
        run: ./run_tests.sh

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: embin-x86_64-${{ matrix.os }}${{ matrix.suffix }}
          path: target/release/embin${{ matrix.suffix }}
          if-no-files-found: error

      - name: Set binary name
        if: github.event_name == 'release'
        run: cp target/release/embin${{ matrix.suffix }} embin-x86_64-${{ matrix.os }}${{ matrix.suffix }}

      - name: Upload binary
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: embin-x86_64-${{ matrix.os }}${{ matrix.suffix }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    name: debian package
    runs-on: ubuntu-latest
    needs: build
    permissions: write-all

    steps:
      - uses: actions/checkout@v3

      - name: Install cargo-deb
        run: cargo install cargo-deb

      - name: Build package
        run: cargo deb -o embin-x86_64.deb

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: embin-x86_64.deb
          path: ./embin-x86_64.deb
          if-no-files-found: error

      - name: Upload package
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: ./embin-x86_64.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}